{
  "contractName": "ZombieBattle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetDna",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "species",
          "type": "string"
        }
      ],
      "name": "feedAndMultiply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ckAddress",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetDna\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"species\",\"type\":\"string\"}],\"name\":\"feedAndMultiply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ckAddress\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/scott/Desktop/dapp/contracts/module/ZombieBattle.sol\":\"ZombieBattle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/scott/Desktop/dapp/contracts/interface/KittyInterface.sol\":{\"keccak256\":\"0xe5cd3988faa1b3b37ce177f9f04a64f024a3e12f326827e4d9ff3a4443f2a5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55c8d9fd149d7b15fb660dd9eb3df54f8e815fe9f5a695da2736d4c605d7024f\",\"dweb:/ipfs/QmbuiBnKZb63hVyYWJAyZnjT8PQUFXXSTgzbmpnoeivUwB\"]},\"/Users/scott/Desktop/dapp/contracts/library/SafeMath.sol\":{\"keccak256\":\"0x6136fcaeb59c5d2f467542cbbc1645b5963c3ae6727c0d8fd2feb5661ce1f45a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087b63aec51a47e94864ddeefa7a79c25546a4ffd615fb5f6065c058b633e756\",\"dweb:/ipfs/QmRXrzShrRBTydcxMq2BPKKNz8736shGY1Bo5ZUn4kCkZg\"]},\"/Users/scott/Desktop/dapp/contracts/module/Ownable.sol\":{\"keccak256\":\"0xa970a8c354cc17304e424926cec94fa1ea54ebb6eddcba31e1143d258d3dcd9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e22d1dfc2fa91af1f56faac2d1d6f91ab9adac076591cc90dd653c90107ee16\",\"dweb:/ipfs/QmUcBwFQ6ZWDMVuZuq1mxYS5GCt6YSs6mN2CNXMcEw4LQe\"]},\"/Users/scott/Desktop/dapp/contracts/module/ZombieBattle.sol\":{\"keccak256\":\"0x74a043491dd3b65ba98776ffce316100ef936b04b5168a2312569bf1b3c9137b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c1f78b0af880f88a4ead336c31ccf0d4f8897c74347a5925f7600bb2d6fc5d1\",\"dweb:/ipfs/QmYMiP1fQnZCFgxPZSTaaR73wbg6UtAQcAeUe1iNDQniRw\"]},\"/Users/scott/Desktop/dapp/contracts/module/ZombieFactory.sol\":{\"keccak256\":\"0x99d06d5623972d4716da074e8e449a3eac941365b13fdf690b1bef5856a310d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c58173723b579755c0d2196c3268ac302ec8346441d27a7db2c186fedce2128\",\"dweb:/ipfs/QmfJhwmUq7rVqM2kYc5t2m6tJGhQVuTW3YGT8JeHanprMy\"]},\"/Users/scott/Desktop/dapp/contracts/module/ZombieFeeding.sol\":{\"keccak256\":\"0x503410d5c0941865bcee9145c9ab306cda3475317ec096bb350a012d053909ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5251fd11bc9009d755e46c858bfe069d40e39af351817585e6a98181827843f\",\"dweb:/ipfs/QmcErbCMKTE9hHWusaVPa3EukPWUBJp1xtFjR1g1js3Rkx\"]},\"/Users/scott/Desktop/dapp/contracts/module/ZombieHelper.sol\":{\"keccak256\":\"0x297dd1108d946c4f902ac11d8029550c7257e15a63c27514523b975d04249735\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94e1c557a4c70398c7791479877379345055381c64bacecf19d46f88e9fa1bc3\",\"dweb:/ipfs/QmQLvS7vpxnJxABkxi75jo2XXZbaict3FkksjBosPXK6DS\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c6800060085560006009556046600a5534801561003a57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611aa48061008a6000396000f3fe6080604052600436106100e85760003560e01c80635faf28801161008a578063c39cbef111610059578063c39cbef1146105e8578063ccf670f8146106ba578063e1fa7638146106f5578063f2fde38b1461073a576100e8565b80635faf2880146103be5780636b0bfc80146104035780637bff0a01146104df5780638da5cb5b146105a7576100e8565b80633ccfd60b116100c65780633ccfd60b1461024b5780634412e10414610262578063528b7b8f146103085780635f4623f11461036d576100e8565b80630ce90ec2146100ed57806317a7f4cc1461011b5780632052465e14610160575b600080fd5b6101196004803603602081101561010357600080fd5b810190808035906020019092919050505061078b565b005b34801561012757600080fd5b5061015e6004803603604081101561013e57600080fd5b8101908080359060200190929190803590602001909291905050506107e5565b005b34801561016c57600080fd5b506101996004803603602081101561018357600080fd5b8101908080359060200190929190505050610970565b60405180806020018781526020018663ffffffff1681526020018563ffffffff1681526020018461ffff1681526020018361ffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561020b5780820151818401526020810190506101f0565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561025757600080fd5b50610260610a90565b005b34801561026e57600080fd5b506102b16004803603602081101561028557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b51565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f45780820151818401526020810190506102d9565b505050509050019250505060405180910390f35b34801561031457600080fd5b506103416004803603602081101561032b57600080fd5b8101908080359060200190929190505050610c9b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037957600080fd5b506103bc6004803603602081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cce565b005b3480156103ca57600080fd5b50610401600480360360408110156103e157600080fd5b810190808035906020019092919080359060200190929190505050610d6a565b005b34801561040f57600080fd5b506104dd6004803603606081101561042657600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561045757600080fd5b82018360208201111561046957600080fd5b8035906020019184600183028401116401000000008311171561048b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e44565b005b3480156104eb57600080fd5b506105a56004803603602081101561050257600080fd5b810190808035906020019064010000000081111561051f57600080fd5b82018360208201111561053157600080fd5b8035906020019184600183028401116401000000008311171561055357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611026565b005b3480156105b357600080fd5b506105bc61108d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f457600080fd5b506106b86004803603604081101561060b57600080fd5b81019080803590602001909291908035906020019064010000000081111561063257600080fd5b82018360208201111561064457600080fd5b8035906020019184600183028401116401000000008311171561066657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110b1565b005b3480156106c657600080fd5b506106f3600480360360208110156106dd57600080fd5b810190808035906020019092919050505061119b565b005b34801561070157600080fd5b506107386004803603604081101561071857600080fd5b8101908080359060200190929190803590602001909291905050506111fd565b005b34801561074657600080fd5b506107896004803603602081101561075d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113f4565b005b600854341461079957600080fd5b6107e16001600483815481106107ab57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1661154390919063ffffffff16565b5050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d61014081101561088657600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061096b83826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250610e44565b505050565b6004818154811061098057600080fd5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae857600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b4e573d6000803e3d6000fd5b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205467ffffffffffffffff81118015610baa57600080fd5b50604051908082528060200260200182016040528015610bd95781602001602082028036833780820191505090505b5090506000805b600480549050811015610c90578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c835780838381518110610c6157fe5b602002602001018181525050610c8160018361156b90919063ffffffff16565b505b8080600101915050610be0565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d2657600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610d7b57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610dae57600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1a57600080fd5b8360048681548110610e2857fe5b9060005260206000209060030201600101819055505050505050565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eb057600080fd5b600060048581548110610ebf57fe5b90600052602060002090600302019050610ed881611587565b610ee157600080fd5b6002548481610eec57fe5b069350600060028583600101540181610f0157fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310610f825780518252602082019150602081019050602083039250610f5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610fd657606360648281610fcf57fe5b0682030190505b6110156040518060400160405280600681526020017f4e6f4e616d650000000000000000000000000000000000000000000000000000815250826115ae565b61101e82611852565b505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461107257600080fd5b600061107d8261187c565b905061108982826115ae565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028281600482815481106110c257fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610156110f557600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461116157600080fd5b836004868154811061116f57fe5b906000526020600020906003020160000190805190602001906111939291906119c3565b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f357600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126957600080fd5b60006004848154811061127857fe5b9060005260206000209060030201905060006004848154811061129757fe5b9060005260206000209060030201905060006112b3606461190a565b9050600a54811161138c576112e860018460020160089054906101000a900461ffff1661ffff1661198890919063ffffffff16565b5061131760018460020160009054906101000a900463ffffffff1663ffffffff1661154390919063ffffffff16565b50611342600183600201600a9054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113878683600101546040518060400160405280600681526020017f7a6f6d6269650000000000000000000000000000000000000000000000000000815250610e44565b6113ec565b6113b6600184600201600a9054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113e160018360020160089054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113eb83611852565b5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461144c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561148657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508363ffffffff168163ffffffff16101561156157fe5b8091505092915050565b60008082840190508381101561157d57fe5b8091505092915050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60046040518060c00160405280848152602001838152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061163d9291906119c3565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff160217905550505060006116f960016004805490506119ac90919063ffffffff16565b9050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a06001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461156b90919063ffffffff16565b507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118115780820151818401526020810190506117f6565b50505050905090810190601f16801561183e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080826040516020018082805190602001908083835b602083106118b65780518252602082019150602081019050602083039250611893565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161190157fe5b06915050919050565b6000611922600160095461156b90919063ffffffff16565b50814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161198057fe5b069050919050565b60008082840190508361ffff168161ffff1610156119a257fe5b8091505092915050565b6000828211156119b857fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826119f95760008555611a40565b82601f10611a1257805160ff1916838001178555611a40565b82800160010185558215611a40579182015b82811115611a3f578251825591602001919060010190611a24565b5b509050611a4d9190611a51565b5090565b5b80821115611a6a576000816000905550600101611a52565b509056fea26469706673582212208957900c82261ea2b6093e5190edcf56c4a275c33da4ee1dbdad519c9de54fea64736f6c63430007040033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80635faf28801161008a578063c39cbef111610059578063c39cbef1146105e8578063ccf670f8146106ba578063e1fa7638146106f5578063f2fde38b1461073a576100e8565b80635faf2880146103be5780636b0bfc80146104035780637bff0a01146104df5780638da5cb5b146105a7576100e8565b80633ccfd60b116100c65780633ccfd60b1461024b5780634412e10414610262578063528b7b8f146103085780635f4623f11461036d576100e8565b80630ce90ec2146100ed57806317a7f4cc1461011b5780632052465e14610160575b600080fd5b6101196004803603602081101561010357600080fd5b810190808035906020019092919050505061078b565b005b34801561012757600080fd5b5061015e6004803603604081101561013e57600080fd5b8101908080359060200190929190803590602001909291905050506107e5565b005b34801561016c57600080fd5b506101996004803603602081101561018357600080fd5b8101908080359060200190929190505050610970565b60405180806020018781526020018663ffffffff1681526020018563ffffffff1681526020018461ffff1681526020018361ffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561020b5780820151818401526020810190506101f0565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561025757600080fd5b50610260610a90565b005b34801561026e57600080fd5b506102b16004803603602081101561028557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b51565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f45780820151818401526020810190506102d9565b505050509050019250505060405180910390f35b34801561031457600080fd5b506103416004803603602081101561032b57600080fd5b8101908080359060200190929190505050610c9b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037957600080fd5b506103bc6004803603602081101561039057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cce565b005b3480156103ca57600080fd5b50610401600480360360408110156103e157600080fd5b810190808035906020019092919080359060200190929190505050610d6a565b005b34801561040f57600080fd5b506104dd6004803603606081101561042657600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561045757600080fd5b82018360208201111561046957600080fd5b8035906020019184600183028401116401000000008311171561048b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e44565b005b3480156104eb57600080fd5b506105a56004803603602081101561050257600080fd5b810190808035906020019064010000000081111561051f57600080fd5b82018360208201111561053157600080fd5b8035906020019184600183028401116401000000008311171561055357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611026565b005b3480156105b357600080fd5b506105bc61108d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f457600080fd5b506106b86004803603604081101561060b57600080fd5b81019080803590602001909291908035906020019064010000000081111561063257600080fd5b82018360208201111561064457600080fd5b8035906020019184600183028401116401000000008311171561066657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110b1565b005b3480156106c657600080fd5b506106f3600480360360208110156106dd57600080fd5b810190808035906020019092919050505061119b565b005b34801561070157600080fd5b506107386004803603604081101561071857600080fd5b8101908080359060200190929190803590602001909291905050506111fd565b005b34801561074657600080fd5b506107896004803603602081101561075d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113f4565b005b600854341461079957600080fd5b6107e16001600483815481106107ab57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1661154390919063ffffffff16565b5050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d61014081101561088657600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061096b83826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250610e44565b505050565b6004818154811061098057600080fd5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a2c5780601f10610a0157610100808354040283529160200191610a2c565b820191906000526020600020905b815481529060010190602001808311610a0f57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae857600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b4e573d6000803e3d6000fd5b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205467ffffffffffffffff81118015610baa57600080fd5b50604051908082528060200260200182016040528015610bd95781602001602082028036833780820191505090505b5090506000805b600480549050811015610c90578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c835780838381518110610c6157fe5b602002602001018181525050610c8160018361156b90919063ffffffff16565b505b8080600101915050610be0565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d2657600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610d7b57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610dae57600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e1a57600080fd5b8360048681548110610e2857fe5b9060005260206000209060030201600101819055505050505050565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eb057600080fd5b600060048581548110610ebf57fe5b90600052602060002090600302019050610ed881611587565b610ee157600080fd5b6002548481610eec57fe5b069350600060028583600101540181610f0157fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310610f825780518252602082019150602081019050602083039250610f5f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610fd657606360648281610fcf57fe5b0682030190505b6110156040518060400160405280600681526020017f4e6f4e616d650000000000000000000000000000000000000000000000000000815250826115ae565b61101e82611852565b505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461107257600080fd5b600061107d8261187c565b905061108982826115ae565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028281600482815481106110c257fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610156110f557600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461116157600080fd5b836004868154811061116f57fe5b906000526020600020906003020160000190805190602001906111939291906119c3565b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f357600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126957600080fd5b60006004848154811061127857fe5b9060005260206000209060030201905060006004848154811061129757fe5b9060005260206000209060030201905060006112b3606461190a565b9050600a54811161138c576112e860018460020160089054906101000a900461ffff1661ffff1661198890919063ffffffff16565b5061131760018460020160009054906101000a900463ffffffff1663ffffffff1661154390919063ffffffff16565b50611342600183600201600a9054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113878683600101546040518060400160405280600681526020017f7a6f6d6269650000000000000000000000000000000000000000000000000000815250610e44565b6113ec565b6113b6600184600201600a9054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113e160018360020160089054906101000a900461ffff1661ffff1661198890919063ffffffff16565b506113eb83611852565b5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461144c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561148657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508363ffffffff168163ffffffff16101561156157fe5b8091505092915050565b60008082840190508381101561157d57fe5b8091505092915050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60046040518060c00160405280848152602001838152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061163d9291906119c3565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff160217905550505060006116f960016004805490506119ac90919063ffffffff16565b9050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a06001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461156b90919063ffffffff16565b507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156118115780820151818401526020810190506117f6565b50505050905090810190601f16801561183e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080826040516020018082805190602001908083835b602083106118b65780518252602082019150602081019050602083039250611893565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161190157fe5b06915050919050565b6000611922600160095461156b90919063ffffffff16565b50814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161198057fe5b069050919050565b60008082840190508361ffff168161ffff1610156119a257fe5b8091505092915050565b6000828211156119b857fe5b818303905092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826119f95760008555611a40565b82601f10611a1257805160ff1916838001178555611a40565b82800160010185558215611a40579182015b82811115611a3f578251825591602001919060010190611a24565b5b509050611a4d9190611a51565b5090565b5b80821115611a6a576000816000905550600101611a52565b509056fea26469706673582212208957900c82261ea2b6093e5190edcf56c4a275c33da4ee1dbdad519c9de54fea64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "87:1045:5:-:0;;;360:2:6;340:22;;393:9;;389:2;:13;368:34;;448:6;428:26;;251:11:8;233:29;;248:1:5;231:18;;318:2;286:34;;87:1045;;;;;;;;;;572:10:4;564:5;;:18;;;;;;;;;;;;;;;;;;87:1045:5;;;;;;",
  "deployedSourceMap": "87:1045:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:138:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1396:214:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;629:23:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:93:8;;;;;;;;;;;;;:::i;:::-;;1043:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:48:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;328:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;887:150:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;807:583:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1343:204:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;270:28:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;725:156:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;490:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;526:603:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;925:196:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;581:138:8;661:10;;648:9;:23;640:32;;;;;;682:30;710:1;682:7;690:8;682:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:27;;;;:30;;;;:::i;:::-;;581:138;:::o;1396:214:7:-;1463:13;1518;;;;;;;;;;;:22;;;1541:7;1518:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:44;1575:8;1585;1559:44;;;;;;;;;;;;;;;;;:15;:44::i;:::-;1396:214;;;:::o;629:23:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;391:93:8:-;730:5:4;;;;;;;;;;716:19;;:10;:19;;;708:28;;;;;;440:5:8::1;::::0;::::1;;;;;;;;:14;;:37;455:21;440:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;391:93::o:0;1043:394::-;1108:13;1133:20;1167:16;:23;1184:5;1167:23;;;;;;;;;;;;;;;;1156:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1133:58;;1201:12;1232:6;1227:181;1248:7;:14;;;;1244:1;:18;1227:181;;;1307:5;1287:25;;:13;:16;1301:1;1287:16;;;;;;;;;;;;;;;;;;;;;:25;;;1283:115;;;1350:1;1332:6;1339:7;1332:15;;;;;;;;;;;;;:19;;;;;1369:14;1381:1;1369:7;:11;;:14;;;;:::i;:::-;;1283:115;1264:3;;;;;;;1227:181;;;;1424:6;1417:13;;;;1043:394;;;:::o;685:48:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;328:129:7:-;730:5:4;;;;;;;;;;716:19;;:10;:19;;;708:28;;;;;;440:9:7::1;409:13;;:41;;;;;;;;;;;;;;;;;;328:129:::0;:::o;887:150:8:-;954:2;958:8;361:5;334:7;342:8;334:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;;326:41;;;;;;980:8:::1;280:13:7;:23;294:8;280:23;;;;;;;;;;;;;;;;;;;;;266:37;;:10;:37;;;258:46;;;::::0;::::1;;1024:6:8::2;1000:7;1008:8;1000:17;;;;;;;;;;;;;;;;;;:21;;:30;;;;377:1:::1;887:150:::0;;;;:::o;807:583:7:-;911:8;280:13;:23;294:8;280:23;;;;;;;;;;;;;;;;;;;;;266:37;;:10;:37;;;258:46;;;;;;931:23:::1;957:7;965:8;957:17;;;;;;;;;;;;;;;;;;931:43;;992:18;1001:8;992;:18::i;:::-;984:27;;;::::0;::::1;;1045:10;;1033:9;:22;;;;;;1021:34;;1065:14;1111:1;1098:9;1083:8;:12;;;:24;1082:30;;;;;;1065:47;;1176:25;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;1166:36;;;;;;1153:7;1136:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:36;;;;;;:76;1122:140;;;1249:2;1243:3;1236:6;:10;;;;;;1227:6;:19;:24;1218:33;;1122:140;1271:31;;;;;;;;;;;;;;;;;::::0;1295:6:::1;1271:13;:31::i;:::-;1357:26;1374:8;1357:16;:26::i;:::-;314:1;;807:583:::0;;;;:::o;1343:204:6:-;1448:1;1416:16;:28;1433:10;1416:28;;;;;;;;;;;;;;;;:33;1408:42;;;;;;1460:15;1478:24;1497:4;1478:18;:24::i;:::-;1460:42;;1512:28;1526:4;1532:7;1512:13;:28::i;:::-;1343:204;;:::o;270:28:4:-;;;;;;;;;;;;:::o;725:156:8:-;800:1;803:8;361:5;334:7;342:8;334:17;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;;326:41;;;;;;825:8:::1;280:13:7;:23;294:8;280:23;;;;;;;;;;;;;;;;;;;;;266:37;;:10;:37;;;258:46;;;::::0;::::1;;870:4:8::2;845:7;853:8;845:17;;;;;;;;;;;;;;;;;;:22;;:29;;;;;;;;;;;;:::i;:::-;;377:1:::1;725:156:::0;;;;:::o;490:85::-;730:5:4;;;;;;;;;;716:19;;:10;:19;;;708:28;;;;;;565:3:8::1;552:10;:16;;;;490:85:::0;:::o;526:603:5:-;593:8;280:13:7;:23;294:8;280:23;;;;;;;;;;;;;;;;;;;;;266:37;;:10;:37;;;258:46;;;;;;613:23:5::1;639:7;647:8;639:17;;;;;;;;;;;;;;;;;;613:43;;666:26;695:7;703:8;695:17;;;;;;;;;;;;;;;;;;666:46;;722:9;734:12;742:3;734:7;:12::i;:::-;722:24;;768;;760:4;:32;756:367;;808:24;830:1;808:8;:17;;;;;;;;;;;;:21;;;;:24;;;;:::i;:::-;;846:21;865:1;846:8;:14;;;;;;;;;;;;:18;;;;:21;;;;:::i;:::-;;881:28;907:1;881:11;:21;;;;;;;;;;;;:25;;;;:28;;;;:::i;:::-;;923:52;939:8;949:11;:15;;;923:52;;;;;;;;;;;;;;;;::::0;:15:::1;:52::i;:::-;756:367;;;1006:25;1029:1;1006:8;:18;;;;;;;;;;;;:22;;;;:25;;;;:::i;:::-;;1045:27;1070:1;1045:11;:20;;;;;;;;;;;;:24;;;;:27;;;;:::i;:::-;;1086:26;1103:8;1086:16;:26::i;:::-;756:367;314:1:7;;;526:603:5::0;;;:::o;925:196:4:-;730:5;;;;;;;;;;716:19;;:10;:19;;;708:28;;;;;;1033:1:::1;1013:22;;:8;:22;;;;1005:31;;;::::0;::::1;;1079:8;1051:37;;1072:5;::::0;::::1;;;;;;;;1051:37;;;;;;;;;;;;1106:8;1098:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;925:196:::0;:::o;1346:125:3:-;1402:6;1416:8;1431:1;1427;:5;1416:16;;1450:1;1445:6;;:1;:6;;;;1438:14;;;;1465:1;1458:8;;;1346:125;;;;:::o;639:129::-;697:7;712:9;728:1;724;:5;712:17;;747:1;742;:6;;735:14;;;;762:1;755:8;;;639:129;;;;:::o;670:131:7:-;734:4;778:15;758:6;:16;;;;;;;;;;;;:35;;;;750:44;;670:131;;;:::o;819:327:6:-;894:7;907:66;;;;;;;;914:4;907:66;;;;920:3;907:66;;;;925:1;907:66;;;;;;953:12;;935:15;:30;907:66;;;;;;968:1;907:66;;;;;;971:1;907:66;;;;;894:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:7;994:21;1013:1;994:7;:14;;;;:18;;:21;;;;:::i;:::-;984:31;;1045:10;1025:13;:17;1039:2;1025:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1065:35;1098:1;1065:16;:28;1082:10;1065:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;;1115:24;1125:2;1129:4;1135:3;1115:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:327;;;:::o;499:132:7:-;611:12;;593:15;:30;567:6;:16;;;:57;;;;;;;;;;;;;;;;;;499:132;:::o;1152:185:6:-;1221:7;1240:12;1290:3;1273:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:32;;;;;;1255:41;;1240:56;;1320:10;;1313:4;:17;;;;;;1306:24;;;1152:185;;;:::o;327:193:5:-;381:4;397:16;411:1;397:9;;:13;;:16;;;;:::i;:::-;;506:7;462:15;479:10;491:9;;445:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:67;;;;;;430:73;;:83;;;;;;423:90;;327:193;;;:::o;2049:125:3:-;2105:6;2119:8;2134:1;2130;:5;2119:16;;2153:1;2148:6;;:1;:6;;;;2141:14;;;;2168:1;2161:8;;;2049:125;;;;:::o;525:110::-;583:7;610:1;605;:6;;598:14;;;;629:1;625;:5;618:12;;525:110;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.4;\n\nimport \"./ZombieHelper.sol\";\n\ncontract ZombieBattle is ZombieHelper {\n\n    using SafeMath for uint256;\n    using SafeMath32 for uint32;\n    using SafeMath16 for uint16;\n\n    uint randNonce = 0;\n    // 袭击赢的概率: 70%\n    uint attackVictoryProbability = 70;\n\n    function randMod(uint modules) internal view returns (uint) {\n        randNonce.add(1);\n        return uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % modules;\n    }\n\n    function attack(uint zombieId, uint targetId) external onlyOwnerOf(zombieId) {\n        Zombie storage myZombie = zombies[zombieId];\n        Zombie storage enemyZombie = zombies[targetId];\n        uint rand = randMod(100);\n        if (rand <= attackVictoryProbability) {\n            myZombie.winCount.add(1);\n            myZombie.level.add(1);\n            enemyZombie.lossCount.add(1);\n            feedAndMultiply(zombieId, enemyZombie.dna, \"zombie\");\n        } else {\n            myZombie.lossCount.add(1);\n            enemyZombie.winCount.add(1);\n            _triggerCooldown(myZombie);\n        }\n    }\n\n}",
  "sourcePath": "/Users/scott/Desktop/dapp/contracts/module/ZombieBattle.sol",
  "ast": {
    "absolutePath": "/Users/scott/Desktop/dapp/contracts/module/ZombieBattle.sol",
    "exportedSymbols": {
      "KittyInterface": [
        112
      ],
      "Ownable": [
        463
      ],
      "SafeMath": [
        210
      ],
      "SafeMath16": [
        402
      ],
      "SafeMath32": [
        306
      ],
      "ZombieBattle": [
        600
      ],
      "ZombieFactory": [
        765
      ],
      "ZombieFeeding": [
        938
      ],
      "ZombieHelper": [
        1126
      ]
    },
    "id": 601,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 465,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/Users/scott/Desktop/dapp/contracts/module/ZombieHelper.sol",
        "file": "./ZombieHelper.sol",
        "id": 466,
        "nodeType": "ImportDirective",
        "scope": 601,
        "sourceUnit": 1127,
        "src": "57:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 467,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1126,
              "src": "112:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1126",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 468,
            "nodeType": "InheritanceSpecifier",
            "src": "112:12:5"
          }
        ],
        "contractDependencies": [
          463,
          765,
          938,
          1126
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 600,
        "linearizedBaseContracts": [
          600,
          1126,
          938,
          765,
          463
        ],
        "name": "ZombieBattle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 471,
            "libraryName": {
              "id": 469,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 210,
              "src": "138:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$210",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "132:27:5",
            "typeName": {
              "id": 470,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "151:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 474,
            "libraryName": {
              "id": 472,
              "name": "SafeMath32",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 306,
              "src": "170:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath32_$306",
                "typeString": "library SafeMath32"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "164:28:5",
            "typeName": {
              "id": 473,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "185:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            }
          },
          {
            "id": 477,
            "libraryName": {
              "id": 475,
              "name": "SafeMath16",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 402,
              "src": "203:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath16_$402",
                "typeString": "library SafeMath16"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "197:28:5",
            "typeName": {
              "id": 476,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "218:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            }
          },
          {
            "constant": false,
            "id": 480,
            "mutability": "mutable",
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 600,
            "src": "231:18:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 478,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "231:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 479,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "248:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 483,
            "mutability": "mutable",
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 600,
            "src": "286:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 481,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "286:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3730",
              "id": 482,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "318:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "387:133:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "411:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "randNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "397:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 209,
                      "src": "397:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "397:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "397:16:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 501,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "462:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "462:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 503,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "479:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "479:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 505,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "491:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 499,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "445:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "445:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "445:56:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 498,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "435:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "435:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "430:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "430:4:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "430:73:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 509,
                      "name": "modules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "506:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "430:83:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 511,
                  "nodeType": "Return",
                  "src": "423:90:5"
                }
              ]
            },
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "modules",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "344:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:14:5"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "381:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "380:6:5"
            },
            "scope": 600,
            "src": "327:193:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "603:526:5",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "613:23:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 647,
                        "src": "613:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 528,
                  "initialValue": {
                    "baseExpression": {
                      "id": 525,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "639:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$647_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 527,
                    "indexExpression": {
                      "id": 526,
                      "name": "zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "647:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "639:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$647_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:43:5"
                },
                {
                  "assignments": [
                    530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "666:26:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "id": 529,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 647,
                        "src": "666:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "baseExpression": {
                      "id": 531,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "695:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$647_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 533,
                    "indexExpression": {
                      "id": 532,
                      "name": "targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "703:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "695:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$647_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "666:46:5"
                },
                {
                  "assignments": [
                    536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 598,
                      "src": "722:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "722:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 540,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "742:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 537,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "734:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "722:24:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 541,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "760:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 542,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "768:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "760:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 596,
                    "nodeType": "Block",
                    "src": "992:131:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1029:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 576,
                                "name": "myZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 524,
                                "src": "1006:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 646,
                              "src": "1006:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 401,
                            "src": "1006:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                              "typeString": "function (uint16,uint16) pure returns (uint16)"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1006:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "1006:25:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1070:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 584,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "1045:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 644,
                              "src": "1045:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 401,
                            "src": "1045:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                              "typeString": "function (uint16,uint16) pure returns (uint16)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1045:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "1045:27:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 593,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "1103:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 592,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 821,
                            "src": "1086:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$647_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1086:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "1086:26:5"
                      }
                    ]
                  },
                  "id": 597,
                  "nodeType": "IfStatement",
                  "src": "756:367:5",
                  "trueBody": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "794:192:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "830:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 544,
                                "name": "myZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 524,
                                "src": "808:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 644,
                              "src": "808:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 401,
                            "src": "808:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                              "typeString": "function (uint16,uint16) pure returns (uint16)"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "808:24:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 551,
                        "nodeType": "ExpressionStatement",
                        "src": "808:24:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "865:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 552,
                                "name": "myZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 524,
                                "src": "846:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 640,
                              "src": "846:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 305,
                            "src": "846:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_uint32_$bound_to$_t_uint32_$",
                              "typeString": "function (uint32,uint32) pure returns (uint32)"
                            }
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 559,
                        "nodeType": "ExpressionStatement",
                        "src": "846:21:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "907:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 560,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "881:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 646,
                              "src": "881:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 401,
                            "src": "881:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_uint16_$",
                              "typeString": "function (uint16,uint16) pure returns (uint16)"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "881:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "881:28:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 569,
                              "name": "zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "939:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 570,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 530,
                                "src": "949:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 571,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 638,
                              "src": "949:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "7a6f6d626965",
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "966:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 568,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 912,
                            "src": "923:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "923:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "923:52:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e1fa7638",
            "id": 599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 520,
                    "name": "zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 515,
                    "src": "593:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 521,
                "modifierName": {
                  "id": 519,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 788,
                  "src": "581:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "581:21:5"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "542:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "557:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "541:30:5"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:5"
            },
            "scope": 600,
            "src": "526:603:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 601,
        "src": "87:1045:5"
      }
    ],
    "src": "32:1100:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/scott/Desktop/dapp/contracts/module/ZombieBattle.sol",
      "exportedSymbols": {
        "KittyInterface": [
          112
        ],
        "Ownable": [
          463
        ],
        "SafeMath": [
          210
        ],
        "SafeMath16": [
          402
        ],
        "SafeMath32": [
          306
        ],
        "ZombieBattle": [
          600
        ],
        "ZombieFactory": [
          765
        ],
        "ZombieFeeding": [
          938
        ],
        "ZombieHelper": [
          1126
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".4"
          ]
        },
        "id": 465,
        "name": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 1127,
          "absolutePath": "/Users/scott/Desktop/dapp/contracts/module/ZombieHelper.sol",
          "file": "./ZombieHelper.sol",
          "scope": 601,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 466,
        "name": "ImportDirective",
        "src": "57:28:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            463,
            765,
            938,
            1126
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            600,
            1126,
            938,
            765,
            463
          ],
          "name": "ZombieBattle",
          "scope": 601
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ZombieHelper",
                  "referencedDeclaration": 1126,
                  "type": "contract ZombieHelper"
                },
                "id": 467,
                "name": "UserDefinedTypeName",
                "src": "112:12:5"
              }
            ],
            "id": 468,
            "name": "InheritanceSpecifier",
            "src": "112:12:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 210,
                  "type": "library SafeMath"
                },
                "id": 469,
                "name": "UserDefinedTypeName",
                "src": "138:8:5"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 470,
                "name": "ElementaryTypeName",
                "src": "151:7:5"
              }
            ],
            "id": 471,
            "name": "UsingForDirective",
            "src": "132:27:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath32",
                  "referencedDeclaration": 306,
                  "type": "library SafeMath32"
                },
                "id": 472,
                "name": "UserDefinedTypeName",
                "src": "170:10:5"
              },
              {
                "attributes": {
                  "name": "uint32",
                  "type": "uint32"
                },
                "id": 473,
                "name": "ElementaryTypeName",
                "src": "185:6:5"
              }
            ],
            "id": 474,
            "name": "UsingForDirective",
            "src": "164:28:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath16",
                  "referencedDeclaration": 402,
                  "type": "library SafeMath16"
                },
                "id": 475,
                "name": "UserDefinedTypeName",
                "src": "203:10:5"
              },
              {
                "attributes": {
                  "name": "uint16",
                  "type": "uint16"
                },
                "id": 476,
                "name": "ElementaryTypeName",
                "src": "218:6:5"
              }
            ],
            "id": 477,
            "name": "UsingForDirective",
            "src": "197:28:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "randNonce",
              "scope": 600,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 478,
                "name": "ElementaryTypeName",
                "src": "231:4:5"
              },
              {
                "attributes": {
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 479,
                "name": "Literal",
                "src": "248:1:5"
              }
            ],
            "id": 480,
            "name": "VariableDeclaration",
            "src": "231:18:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "attackVictoryProbability",
              "scope": 600,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 481,
                "name": "ElementaryTypeName",
                "src": "286:4:5"
              },
              {
                "attributes": {
                  "hexvalue": "3730",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 70",
                  "value": "70"
                },
                "id": 482,
                "name": "Literal",
                "src": "318:2:5"
              }
            ],
            "id": 483,
            "name": "VariableDeclaration",
            "src": "286:34:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "randMod",
              "scope": 600,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "modules",
                      "scope": 513,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 484,
                        "name": "ElementaryTypeName",
                        "src": "344:4:5"
                      }
                    ],
                    "id": 485,
                    "name": "VariableDeclaration",
                    "src": "344:12:5"
                  }
                ],
                "id": 486,
                "name": "ParameterList",
                "src": "343:14:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 513,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 487,
                        "name": "ElementaryTypeName",
                        "src": "381:4:5"
                      }
                    ],
                    "id": 488,
                    "name": "VariableDeclaration",
                    "src": "381:4:5"
                  }
                ],
                "id": 489,
                "name": "ParameterList",
                "src": "380:6:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 209,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 480,
                                  "type": "uint256",
                                  "value": "randNonce"
                                },
                                "id": 490,
                                "name": "Identifier",
                                "src": "397:9:5"
                              }
                            ],
                            "id": 492,
                            "name": "MemberAccess",
                            "src": "397:13:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 493,
                            "name": "Literal",
                            "src": "411:1:5"
                          }
                        ],
                        "id": 494,
                        "name": "FunctionCall",
                        "src": "397:16:5"
                      }
                    ],
                    "id": 495,
                    "name": "ExpressionStatement",
                    "src": "397:16:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 489
                    },
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "%",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 496,
                                    "name": "ElementaryTypeName",
                                    "src": "430:4:5"
                                  }
                                ],
                                "id": 497,
                                "name": "ElementaryTypeNameExpression",
                                "src": "430:4:5"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -8,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 498,
                                    "name": "Identifier",
                                    "src": "435:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -1,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 499,
                                            "name": "Identifier",
                                            "src": "445:3:5"
                                          }
                                        ],
                                        "id": 500,
                                        "name": "MemberAccess",
                                        "src": "445:16:5"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "timestamp",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -4,
                                              "type": "block",
                                              "value": "block"
                                            },
                                            "id": 501,
                                            "name": "Identifier",
                                            "src": "462:5:5"
                                          }
                                        ],
                                        "id": 502,
                                        "name": "MemberAccess",
                                        "src": "462:15:5"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 503,
                                            "name": "Identifier",
                                            "src": "479:3:5"
                                          }
                                        ],
                                        "id": 504,
                                        "name": "MemberAccess",
                                        "src": "479:10:5"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 480,
                                          "type": "uint256",
                                          "value": "randNonce"
                                        },
                                        "id": 505,
                                        "name": "Identifier",
                                        "src": "491:9:5"
                                      }
                                    ],
                                    "id": 506,
                                    "name": "FunctionCall",
                                    "src": "445:56:5"
                                  }
                                ],
                                "id": 507,
                                "name": "FunctionCall",
                                "src": "435:67:5"
                              }
                            ],
                            "id": 508,
                            "name": "FunctionCall",
                            "src": "430:73:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 485,
                              "type": "uint256",
                              "value": "modules"
                            },
                            "id": 509,
                            "name": "Identifier",
                            "src": "506:7:5"
                          }
                        ],
                        "id": 510,
                        "name": "BinaryOperation",
                        "src": "430:83:5"
                      }
                    ],
                    "id": 511,
                    "name": "Return",
                    "src": "423:90:5"
                  }
                ],
                "id": 512,
                "name": "Block",
                "src": "387:133:5"
              }
            ],
            "id": 513,
            "name": "FunctionDefinition",
            "src": "327:193:5"
          },
          {
            "attributes": {
              "functionSelector": "e1fa7638",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "attack",
              "scope": 600,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "zombieId",
                      "scope": 599,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 514,
                        "name": "ElementaryTypeName",
                        "src": "542:4:5"
                      }
                    ],
                    "id": 515,
                    "name": "VariableDeclaration",
                    "src": "542:13:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "targetId",
                      "scope": 599,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 516,
                        "name": "ElementaryTypeName",
                        "src": "557:4:5"
                      }
                    ],
                    "id": 517,
                    "name": "VariableDeclaration",
                    "src": "557:13:5"
                  }
                ],
                "id": 518,
                "name": "ParameterList",
                "src": "541:30:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 522,
                "name": "ParameterList",
                "src": "603:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 788,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 519,
                    "name": "Identifier",
                    "src": "581:11:5"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 515,
                      "type": "uint256",
                      "value": "zombieId"
                    },
                    "id": 520,
                    "name": "Identifier",
                    "src": "593:8:5"
                  }
                ],
                "id": 521,
                "name": "ModifierInvocation",
                "src": "581:21:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        524
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "myZombie",
                          "scope": 598,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Zombie",
                              "referencedDeclaration": 647,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 523,
                            "name": "UserDefinedTypeName",
                            "src": "613:6:5"
                          }
                        ],
                        "id": 524,
                        "name": "VariableDeclaration",
                        "src": "613:23:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 650,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 525,
                            "name": "Identifier",
                            "src": "639:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 515,
                              "type": "uint256",
                              "value": "zombieId"
                            },
                            "id": 526,
                            "name": "Identifier",
                            "src": "647:8:5"
                          }
                        ],
                        "id": 527,
                        "name": "IndexAccess",
                        "src": "639:17:5"
                      }
                    ],
                    "id": 528,
                    "name": "VariableDeclarationStatement",
                    "src": "613:43:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        530
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "enemyZombie",
                          "scope": 598,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Zombie",
                              "referencedDeclaration": 647,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 529,
                            "name": "UserDefinedTypeName",
                            "src": "666:6:5"
                          }
                        ],
                        "id": 530,
                        "name": "VariableDeclaration",
                        "src": "666:26:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 650,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 531,
                            "name": "Identifier",
                            "src": "695:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 517,
                              "type": "uint256",
                              "value": "targetId"
                            },
                            "id": 532,
                            "name": "Identifier",
                            "src": "703:8:5"
                          }
                        ],
                        "id": 533,
                        "name": "IndexAccess",
                        "src": "695:17:5"
                      }
                    ],
                    "id": 534,
                    "name": "VariableDeclarationStatement",
                    "src": "666:46:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        536
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "rand",
                          "scope": 598,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 535,
                            "name": "ElementaryTypeName",
                            "src": "722:4:5"
                          }
                        ],
                        "id": 536,
                        "name": "VariableDeclaration",
                        "src": "722:9:5"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 513,
                              "type": "function (uint256) view returns (uint256)",
                              "value": "randMod"
                            },
                            "id": 537,
                            "name": "Identifier",
                            "src": "734:7:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "313030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 100",
                              "value": "100"
                            },
                            "id": 538,
                            "name": "Literal",
                            "src": "742:3:5"
                          }
                        ],
                        "id": 539,
                        "name": "FunctionCall",
                        "src": "734:12:5"
                      }
                    ],
                    "id": 540,
                    "name": "VariableDeclarationStatement",
                    "src": "722:24:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 536,
                              "type": "uint256",
                              "value": "rand"
                            },
                            "id": 541,
                            "name": "Identifier",
                            "src": "760:4:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 483,
                              "type": "uint256",
                              "value": "attackVictoryProbability"
                            },
                            "id": 542,
                            "name": "Identifier",
                            "src": "768:24:5"
                          }
                        ],
                        "id": 543,
                        "name": "BinaryOperation",
                        "src": "760:32:5"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint16",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 401,
                                      "type": "function (uint16,uint16) pure returns (uint16)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "winCount",
                                          "referencedDeclaration": 644,
                                          "type": "uint16"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 524,
                                              "type": "struct ZombieFactory.Zombie storage pointer",
                                              "value": "myZombie"
                                            },
                                            "id": 544,
                                            "name": "Identifier",
                                            "src": "808:8:5"
                                          }
                                        ],
                                        "id": 547,
                                        "name": "MemberAccess",
                                        "src": "808:17:5"
                                      }
                                    ],
                                    "id": 548,
                                    "name": "MemberAccess",
                                    "src": "808:21:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 549,
                                    "name": "Literal",
                                    "src": "830:1:5"
                                  }
                                ],
                                "id": 550,
                                "name": "FunctionCall",
                                "src": "808:24:5"
                              }
                            ],
                            "id": 551,
                            "name": "ExpressionStatement",
                            "src": "808:24:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 305,
                                      "type": "function (uint32,uint32) pure returns (uint32)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "level",
                                          "referencedDeclaration": 640,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 524,
                                              "type": "struct ZombieFactory.Zombie storage pointer",
                                              "value": "myZombie"
                                            },
                                            "id": 552,
                                            "name": "Identifier",
                                            "src": "846:8:5"
                                          }
                                        ],
                                        "id": 555,
                                        "name": "MemberAccess",
                                        "src": "846:14:5"
                                      }
                                    ],
                                    "id": 556,
                                    "name": "MemberAccess",
                                    "src": "846:18:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 557,
                                    "name": "Literal",
                                    "src": "865:1:5"
                                  }
                                ],
                                "id": 558,
                                "name": "FunctionCall",
                                "src": "846:21:5"
                              }
                            ],
                            "id": 559,
                            "name": "ExpressionStatement",
                            "src": "846:21:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint16",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 401,
                                      "type": "function (uint16,uint16) pure returns (uint16)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "lossCount",
                                          "referencedDeclaration": 646,
                                          "type": "uint16"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 530,
                                              "type": "struct ZombieFactory.Zombie storage pointer",
                                              "value": "enemyZombie"
                                            },
                                            "id": 560,
                                            "name": "Identifier",
                                            "src": "881:11:5"
                                          }
                                        ],
                                        "id": 563,
                                        "name": "MemberAccess",
                                        "src": "881:21:5"
                                      }
                                    ],
                                    "id": 564,
                                    "name": "MemberAccess",
                                    "src": "881:25:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 565,
                                    "name": "Literal",
                                    "src": "907:1:5"
                                  }
                                ],
                                "id": 566,
                                "name": "FunctionCall",
                                "src": "881:28:5"
                              }
                            ],
                            "id": 567,
                            "name": "ExpressionStatement",
                            "src": "881:28:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                          "typeString": "literal_string \"zombie\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 912,
                                      "type": "function (uint256,uint256,string memory)",
                                      "value": "feedAndMultiply"
                                    },
                                    "id": 568,
                                    "name": "Identifier",
                                    "src": "923:15:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 515,
                                      "type": "uint256",
                                      "value": "zombieId"
                                    },
                                    "id": 569,
                                    "name": "Identifier",
                                    "src": "939:8:5"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "dna",
                                      "referencedDeclaration": 638,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 530,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 570,
                                        "name": "Identifier",
                                        "src": "949:11:5"
                                      }
                                    ],
                                    "id": 571,
                                    "name": "MemberAccess",
                                    "src": "949:15:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "7a6f6d626965",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"zombie\"",
                                      "value": "zombie"
                                    },
                                    "id": 572,
                                    "name": "Literal",
                                    "src": "966:8:5"
                                  }
                                ],
                                "id": 573,
                                "name": "FunctionCall",
                                "src": "923:52:5"
                              }
                            ],
                            "id": 574,
                            "name": "ExpressionStatement",
                            "src": "923:52:5"
                          }
                        ],
                        "id": 575,
                        "name": "Block",
                        "src": "794:192:5"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint16",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 401,
                                      "type": "function (uint16,uint16) pure returns (uint16)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "lossCount",
                                          "referencedDeclaration": 646,
                                          "type": "uint16"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 524,
                                              "type": "struct ZombieFactory.Zombie storage pointer",
                                              "value": "myZombie"
                                            },
                                            "id": 576,
                                            "name": "Identifier",
                                            "src": "1006:8:5"
                                          }
                                        ],
                                        "id": 579,
                                        "name": "MemberAccess",
                                        "src": "1006:18:5"
                                      }
                                    ],
                                    "id": 580,
                                    "name": "MemberAccess",
                                    "src": "1006:22:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 581,
                                    "name": "Literal",
                                    "src": "1029:1:5"
                                  }
                                ],
                                "id": 582,
                                "name": "FunctionCall",
                                "src": "1006:25:5"
                              }
                            ],
                            "id": 583,
                            "name": "ExpressionStatement",
                            "src": "1006:25:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint16",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 401,
                                      "type": "function (uint16,uint16) pure returns (uint16)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "winCount",
                                          "referencedDeclaration": 644,
                                          "type": "uint16"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 530,
                                              "type": "struct ZombieFactory.Zombie storage pointer",
                                              "value": "enemyZombie"
                                            },
                                            "id": 584,
                                            "name": "Identifier",
                                            "src": "1045:11:5"
                                          }
                                        ],
                                        "id": 587,
                                        "name": "MemberAccess",
                                        "src": "1045:20:5"
                                      }
                                    ],
                                    "id": 588,
                                    "name": "MemberAccess",
                                    "src": "1045:24:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 589,
                                    "name": "Literal",
                                    "src": "1070:1:5"
                                  }
                                ],
                                "id": 590,
                                "name": "FunctionCall",
                                "src": "1045:27:5"
                              }
                            ],
                            "id": 591,
                            "name": "ExpressionStatement",
                            "src": "1045:27:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Zombie_$647_storage_ptr",
                                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 821,
                                      "type": "function (struct ZombieFactory.Zombie storage pointer)",
                                      "value": "_triggerCooldown"
                                    },
                                    "id": 592,
                                    "name": "Identifier",
                                    "src": "1086:16:5"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 524,
                                      "type": "struct ZombieFactory.Zombie storage pointer",
                                      "value": "myZombie"
                                    },
                                    "id": 593,
                                    "name": "Identifier",
                                    "src": "1103:8:5"
                                  }
                                ],
                                "id": 594,
                                "name": "FunctionCall",
                                "src": "1086:26:5"
                              }
                            ],
                            "id": 595,
                            "name": "ExpressionStatement",
                            "src": "1086:26:5"
                          }
                        ],
                        "id": 596,
                        "name": "Block",
                        "src": "992:131:5"
                      }
                    ],
                    "id": 597,
                    "name": "IfStatement",
                    "src": "756:367:5"
                  }
                ],
                "id": 598,
                "name": "Block",
                "src": "603:526:5"
              }
            ],
            "id": 599,
            "name": "FunctionDefinition",
            "src": "526:603:5"
          }
        ],
        "id": 600,
        "name": "ContractDefinition",
        "src": "87:1045:5"
      }
    ],
    "id": 601,
    "name": "SourceUnit",
    "src": "32:1100:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-19T07:29:42.101Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}